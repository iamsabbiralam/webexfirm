package user

import "time"

type Status int32

const (
	_ Status = iota
	Active
	Inactive
)

type User struct {
	ID        string    `pb:"1" json:"id"`
	FirstName string    `pb:"2" json:"first_name"`
	LastName  string    `pb:"3" json:"last_name"`
	Email     string    `pb:"4" json:"email"`
	Password  string    `pb:"5" json:"password"`
	Status    Status    `pb:"6" json:"status"`
	CreatedAt time.Time `pb:"7" json:"created_at"`
	CreatedBy string    `pb:"8" json:"created_by"`
	UpdatedAt time.Time `pb:"9" json:"updated_at"`
	UpdatedBy string    `pb:"10" json:"updated_by"`
	DeleteAt  time.Time `pb:"11" json:"deleted_at"`
	DeletedBy string    `pb:"12" json:"deleted_by"`
}

type CreateUserRequest struct {
	User User `pb:"1" json:"user"`
}

type CreateUserResponse struct {
	ID string `pb:"1" json:"id"`
}

type GetUserRequest struct {
	User User `pb:"1" json:"user"`
}

type GetUserResponse struct {
	User User `pb:"1" json:"user"`
}

type GetAllUserRequest struct {
	ID         []string `pb:"1" json:"id"`
	SearchTerm string   `pb:"3" json:"search_term"`
	Limit      int32    `pb:"4" json:"limit"`
	Offset     int32    `pb:"5" json:"offset"`
	Status     Status   `pb:"6" json:"status"`
}

type GetAllUserResponse struct {
	User  []User `pb:"1" json:"user"`
	Total int32  `pb:"2" json:"total"`
}

type UserService interface {
	CreateUser(CreateUserRequest) CreateUserResponse
	GetUser(GetUserRequest) GetUserResponse
	GetAllUsers(GetAllUserRequest) GetAllUserResponse
}
