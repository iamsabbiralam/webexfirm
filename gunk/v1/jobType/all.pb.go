// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: practice/webex/gunk/v1/jobType/all.proto

package jobType

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status__        Status = 0
	Status_Active   Status = 1
	Status_Inactive Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "_",
		1: "Active",
		2: "Inactive",
	}
	Status_value = map[string]int32{
		"_":        0,
		"Active":   1,
		"Inactive": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_practice_webex_gunk_v1_jobType_all_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_practice_webex_gunk_v1_jobType_all_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{0}
}

type JobTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string                 `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	Status    Status                 `protobuf:"varint,3,opt,name=Status,json=status,proto3,enum=jobType.Status" json:"status,omitempty"`
	Position  int32                  `protobuf:"varint,4,opt,name=Position,json=position,proto3" json:"position,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,json=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=UpdatedAt,json=updated_at,proto3" json:"updated_at,omitempty"`
}

func (x *JobTypes) Reset() {
	*x = JobTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTypes) ProtoMessage() {}

func (x *JobTypes) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTypes.ProtoReflect.Descriptor instead.
func (*JobTypes) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{0}
}

func (x *JobTypes) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *JobTypes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobTypes) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status__
}

func (x *JobTypes) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *JobTypes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *JobTypes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateJobTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	Status    Status                 `protobuf:"varint,2,opt,name=Status,json=status,proto3,enum=jobType.Status" json:"status,omitempty"`
	Position  int32                  `protobuf:"varint,3,opt,name=Position,json=position,proto3" json:"position,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,json=created_at,proto3" json:"created_at,omitempty"`
	CreatedBy string                 `protobuf:"bytes,5,opt,name=CreatedBy,json=created_by,proto3" json:"created_by,omitempty"`
}

func (x *CreateJobTypesRequest) Reset() {
	*x = CreateJobTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobTypesRequest) ProtoMessage() {}

func (x *CreateJobTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobTypesRequest.ProtoReflect.Descriptor instead.
func (*CreateJobTypesRequest) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{1}
}

func (x *CreateJobTypesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobTypesRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status__
}

func (x *CreateJobTypesRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *CreateJobTypesRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateJobTypesRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateJobTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
}

func (x *CreateJobTypesResponse) Reset() {
	*x = CreateJobTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobTypesResponse) ProtoMessage() {}

func (x *CreateJobTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobTypesResponse.ProtoReflect.Descriptor instead.
func (*CreateJobTypesResponse) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{2}
}

func (x *CreateJobTypesResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetJobTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
}

func (x *GetJobTypesRequest) Reset() {
	*x = GetJobTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobTypesRequest) ProtoMessage() {}

func (x *GetJobTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobTypesRequest.ProtoReflect.Descriptor instead.
func (*GetJobTypesRequest) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{3}
}

func (x *GetJobTypesRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetJobTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	Status   Status `protobuf:"varint,3,opt,name=Status,json=status,proto3,enum=jobType.Status" json:"status,omitempty"`
	Position int32  `protobuf:"varint,4,opt,name=Position,json=position,proto3" json:"position,omitempty"`
}

func (x *GetJobTypesResponse) Reset() {
	*x = GetJobTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobTypesResponse) ProtoMessage() {}

func (x *GetJobTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobTypesResponse.ProtoReflect.Descriptor instead.
func (*GetJobTypesResponse) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{4}
}

func (x *GetJobTypesResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GetJobTypesResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobTypesResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status__
}

func (x *GetJobTypesResponse) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type UpdateJobTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string                 `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	Status    Status                 `protobuf:"varint,3,opt,name=Status,json=status,proto3,enum=jobType.Status" json:"status,omitempty"`
	Position  int32                  `protobuf:"varint,4,opt,name=Position,json=position,proto3" json:"position,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,json=updated_at,proto3" json:"updated_at,omitempty"`
	UpdatedBy string                 `protobuf:"bytes,6,opt,name=UpdatedBy,json=updated_by,proto3" json:"updated_by,omitempty"`
}

func (x *UpdateJobTypesRequest) Reset() {
	*x = UpdateJobTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobTypesRequest) ProtoMessage() {}

func (x *UpdateJobTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobTypesRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobTypesRequest) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateJobTypesRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateJobTypesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateJobTypesRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status__
}

func (x *UpdateJobTypesRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *UpdateJobTypesRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpdateJobTypesRequest) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type UpdateJobTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
}

func (x *UpdateJobTypesResponse) Reset() {
	*x = UpdateJobTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobTypesResponse) ProtoMessage() {}

func (x *UpdateJobTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobTypesResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobTypesResponse) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateJobTypesResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ListJobTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerm string `protobuf:"bytes,1,opt,name=searchTerm,json=search_term,proto3" json:"search_term,omitempty"`
	Offset     int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit      int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Status     Status `protobuf:"varint,4,opt,name=Status,json=status,proto3,enum=jobType.Status" json:"status,omitempty"`
}

func (x *ListJobTypesRequest) Reset() {
	*x = ListJobTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobTypesRequest) ProtoMessage() {}

func (x *ListJobTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobTypesRequest.ProtoReflect.Descriptor instead.
func (*ListJobTypesRequest) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{7}
}

func (x *ListJobTypesRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

func (x *ListJobTypesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListJobTypesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListJobTypesRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status__
}

type ListJobTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypes []*JobTypes `protobuf:"bytes,1,rep,name=JobTypes,json=job_types,proto3" json:"job_types,omitempty"`
	Total    int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListJobTypesResponse) Reset() {
	*x = ListJobTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobTypesResponse) ProtoMessage() {}

func (x *ListJobTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobTypesResponse.ProtoReflect.Descriptor instead.
func (*ListJobTypesResponse) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{8}
}

func (x *ListJobTypesResponse) GetJobTypes() []*JobTypes {
	if x != nil {
		return x.JobTypes
	}
	return nil
}

func (x *ListJobTypesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteJobTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	DeletedBy string `protobuf:"bytes,2,opt,name=DeletedBy,json=deleted_by,proto3" json:"deleted_by,omitempty"`
}

func (x *DeleteJobTypesRequest) Reset() {
	*x = DeleteJobTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobTypesRequest) ProtoMessage() {}

func (x *DeleteJobTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobTypesRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobTypesRequest) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteJobTypesRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DeleteJobTypesRequest) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

type DeleteJobTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteJobTypesResponse) Reset() {
	*x = DeleteJobTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobTypesResponse) ProtoMessage() {}

func (x *DeleteJobTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobTypesResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobTypesResponse) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{10}
}

type GetJobTypesByTitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=Title,json=title,proto3" json:"title,omitempty"`
}

func (x *GetJobTypesByTitleRequest) Reset() {
	*x = GetJobTypesByTitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobTypesByTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobTypesByTitleRequest) ProtoMessage() {}

func (x *GetJobTypesByTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobTypesByTitleRequest.ProtoReflect.Descriptor instead.
func (*GetJobTypesByTitleRequest) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{11}
}

func (x *GetJobTypesByTitleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetJobTypesByTitleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty"`
}

func (x *GetJobTypesByTitleResponse) Reset() {
	*x = GetJobTypesByTitleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobTypesByTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobTypesByTitleResponse) ProtoMessage() {}

func (x *GetJobTypesByTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobTypesByTitleResponse.ProtoReflect.Descriptor instead.
func (*GetJobTypesByTitleResponse) Descriptor() ([]byte, []int) {
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP(), []int{12}
}

func (x *GetJobTypesByTitleResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GetJobTypesByTitleResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_practice_webex_gunk_v1_jobType_all_proto protoreflect.FileDescriptor

var file_practice_webex_gunk_v1_jobType_all_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x65, 0x62, 0x65, 0x78,
	0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x12, 0x45, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00,
	0x22, 0x8e, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x29,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18,
	0x00, 0x22, 0x3c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22,
	0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xb6, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00,
	0x18, 0x00, 0x22, 0xaa, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22,
	0x3c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xc5, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x12, 0x22, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x7c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x08, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09,
	0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x3a, 0x06, 0x08, 0x00, 0x10,
	0x00, 0x18, 0x00, 0x22, 0x66, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x20, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x45, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3a, 0x06, 0x08, 0x00,
	0x10, 0x00, 0x18, 0x00, 0x22, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x06,
	0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x2a, 0x39, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x09, 0x0a, 0x01, 0x5f, 0x10, 0x00, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0e, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x10, 0x0a, 0x08, 0x49,
	0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x00, 0x1a, 0x02, 0x18,
	0x00, 0x32, 0xcd, 0x04, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88,
	0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x12, 0x69, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30, 0x00, 0x1a, 0x03, 0x88, 0x02,
	0x00, 0x42, 0x41, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x26, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63,
	0x65, 0x2f, 0x77, 0x65, 0x62, 0x65, 0x78, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f,
	0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x3b, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x80,
	0x01, 0x00, 0x88, 0x01, 0x00, 0x90, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01,
	0x01, 0xd0, 0x02, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_practice_webex_gunk_v1_jobType_all_proto_rawDescOnce sync.Once
	file_practice_webex_gunk_v1_jobType_all_proto_rawDescData = file_practice_webex_gunk_v1_jobType_all_proto_rawDesc
)

func file_practice_webex_gunk_v1_jobType_all_proto_rawDescGZIP() []byte {
	file_practice_webex_gunk_v1_jobType_all_proto_rawDescOnce.Do(func() {
		file_practice_webex_gunk_v1_jobType_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_practice_webex_gunk_v1_jobType_all_proto_rawDescData)
	})
	return file_practice_webex_gunk_v1_jobType_all_proto_rawDescData
}

var (
	file_practice_webex_gunk_v1_jobType_all_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_practice_webex_gunk_v1_jobType_all_proto_msgTypes  = make([]protoimpl.MessageInfo, 13)
	file_practice_webex_gunk_v1_jobType_all_proto_goTypes   = []interface{}{
		(Status)(0),                        // 0: jobType.Status
		(*JobTypes)(nil),                   // 1: jobType.JobTypes
		(*CreateJobTypesRequest)(nil),      // 2: jobType.CreateJobTypesRequest
		(*CreateJobTypesResponse)(nil),     // 3: jobType.CreateJobTypesResponse
		(*GetJobTypesRequest)(nil),         // 4: jobType.GetJobTypesRequest
		(*GetJobTypesResponse)(nil),        // 5: jobType.GetJobTypesResponse
		(*UpdateJobTypesRequest)(nil),      // 6: jobType.UpdateJobTypesRequest
		(*UpdateJobTypesResponse)(nil),     // 7: jobType.UpdateJobTypesResponse
		(*ListJobTypesRequest)(nil),        // 8: jobType.ListJobTypesRequest
		(*ListJobTypesResponse)(nil),       // 9: jobType.ListJobTypesResponse
		(*DeleteJobTypesRequest)(nil),      // 10: jobType.DeleteJobTypesRequest
		(*DeleteJobTypesResponse)(nil),     // 11: jobType.DeleteJobTypesResponse
		(*GetJobTypesByTitleRequest)(nil),  // 12: jobType.GetJobTypesByTitleRequest
		(*GetJobTypesByTitleResponse)(nil), // 13: jobType.GetJobTypesByTitleResponse
		(*timestamppb.Timestamp)(nil),      // 14: google.protobuf.Timestamp
	}
)

var file_practice_webex_gunk_v1_jobType_all_proto_depIdxs = []int32{
	0,  // 0: jobType.JobTypes.Status:type_name -> jobType.Status
	14, // 1: jobType.JobTypes.CreatedAt:type_name -> google.protobuf.Timestamp
	14, // 2: jobType.JobTypes.UpdatedAt:type_name -> google.protobuf.Timestamp
	0,  // 3: jobType.CreateJobTypesRequest.Status:type_name -> jobType.Status
	14, // 4: jobType.CreateJobTypesRequest.CreatedAt:type_name -> google.protobuf.Timestamp
	0,  // 5: jobType.GetJobTypesResponse.Status:type_name -> jobType.Status
	0,  // 6: jobType.UpdateJobTypesRequest.Status:type_name -> jobType.Status
	14, // 7: jobType.UpdateJobTypesRequest.UpdatedAt:type_name -> google.protobuf.Timestamp
	0,  // 8: jobType.ListJobTypesRequest.Status:type_name -> jobType.Status
	1,  // 9: jobType.ListJobTypesResponse.JobTypes:type_name -> jobType.JobTypes
	2,  // 10: jobType.JobTypesService.CreateJobTypes:input_type -> jobType.CreateJobTypesRequest
	6,  // 11: jobType.JobTypesService.UpdateJobTypes:input_type -> jobType.UpdateJobTypesRequest
	4,  // 12: jobType.JobTypesService.GetJobTypes:input_type -> jobType.GetJobTypesRequest
	8,  // 13: jobType.JobTypesService.ListJobTypes:input_type -> jobType.ListJobTypesRequest
	10, // 14: jobType.JobTypesService.DeleteJobTypes:input_type -> jobType.DeleteJobTypesRequest
	12, // 15: jobType.JobTypesService.GetJobTypesByTitle:input_type -> jobType.GetJobTypesByTitleRequest
	3,  // 16: jobType.JobTypesService.CreateJobTypes:output_type -> jobType.CreateJobTypesResponse
	7,  // 17: jobType.JobTypesService.UpdateJobTypes:output_type -> jobType.UpdateJobTypesResponse
	5,  // 18: jobType.JobTypesService.GetJobTypes:output_type -> jobType.GetJobTypesResponse
	9,  // 19: jobType.JobTypesService.ListJobTypes:output_type -> jobType.ListJobTypesResponse
	11, // 20: jobType.JobTypesService.DeleteJobTypes:output_type -> jobType.DeleteJobTypesResponse
	13, // 21: jobType.JobTypesService.GetJobTypesByTitle:output_type -> jobType.GetJobTypesByTitleResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_practice_webex_gunk_v1_jobType_all_proto_init() }
func file_practice_webex_gunk_v1_jobType_all_proto_init() {
	if File_practice_webex_gunk_v1_jobType_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobTypesByTitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practice_webex_gunk_v1_jobType_all_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobTypesByTitleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_practice_webex_gunk_v1_jobType_all_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_practice_webex_gunk_v1_jobType_all_proto_goTypes,
		DependencyIndexes: file_practice_webex_gunk_v1_jobType_all_proto_depIdxs,
		EnumInfos:         file_practice_webex_gunk_v1_jobType_all_proto_enumTypes,
		MessageInfos:      file_practice_webex_gunk_v1_jobType_all_proto_msgTypes,
	}.Build()
	File_practice_webex_gunk_v1_jobType_all_proto = out.File
	file_practice_webex_gunk_v1_jobType_all_proto_rawDesc = nil
	file_practice_webex_gunk_v1_jobType_all_proto_goTypes = nil
	file_practice_webex_gunk_v1_jobType_all_proto_depIdxs = nil
}
